# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    provider.openweathermap_api_key: '%env(resolve:OPENWEATHERMAP_API_KEY)%'
    provider.weatherbit_api_key: '%env(resolve:WEATHERBIT_API_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    guzzle.service_client:
        class: GuzzleHttp\Client

#    App\Infrastructure\ForecastProvider\Random\RandomCurrentForecastProvider:
#        tags: ['provider.current_forecast']

    App\Infrastructure\ForecastProvider\OpenWeatherMap\CurrentForecastProvider:
        tags: ['provider.current_forecast']
        arguments: ['%provider.openweathermap_api_key%', '@guzzle.service_client']

    App\Infrastructure\ForecastProvider\WeatherBit\CurrentForecastProvider:
        tags: ['provider.current_forecast']
        arguments: ['%provider.weatherbit_api_key%', '@guzzle.service_client']

    App\Infrastructure\Service\FetchCurrentForecasts:
        arguments:
            - !tagged_iterator provider.current_forecast